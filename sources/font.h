#pragma once
#include <vector>

unsigned int font_digits[13][16]
{
 {
  0x00, 0x00, 0x00, 0x00, 0x18, 0x24, 0x42, 0x42, 0x42, 0x21, 0x21, 0x12, 
  0x0C, 0x00, 0x00, 0x00, },

 {
  0x00, 0x00, 0x00, 0x00, 0x10, 0x18, 0x14, 0x10, 0x10, 0x08, 0x08, 0x08, 
  0x3E, 0x00, 0x00, 0x00, },


 {
  0x00, 0x00, 0x00, 0x00, 0x3C, 0x42, 0x42, 0x40, 0x30, 0x0C, 0x02, 0x01, 
  0x3F, 0x00, 0x00, 0x00, },


 {
  0x00, 0x00, 0x00, 0x00, 0x7E, 0x40, 0x20, 0x10, 0x18, 0x20, 0x20, 0x21, 
  0x1E, 0x00, 0x00, 0x00, },


 {
  0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x50, 0x48, 0x24, 0x22, 0x7E, 0x10, 
  0x10, 0x00, 0x00, 0x00, },


 {
  0x00, 0x00, 0x00, 0x00, 0x7C, 0x04, 0x04, 0x3A, 0x46, 0x40, 0x20, 0x21, 
  0x1E, 0x00, 0x00, 0x00, },


 {
  0x00, 0x00, 0x00, 0x00, 0x38, 0x44, 0x02, 0x02, 0x1E, 0x21, 0x21, 0x21, 
  0x1E, 0x00, 0x00, 0x00, },


 {
  0x00, 0x00, 0x00, 0x00, 0x7E, 0x40, 0x20, 0x10, 0x08, 0x04, 0x04, 0x02, 
  0x02, 0x00, 0x00, 0x00, },


 {
  0x00, 0x00, 0x00, 0x00, 0x3C, 0x42, 0x42, 0x42, 0x3E, 0x21, 0x21, 0x21, 
  0x1E, 0x00, 0x00, 0x00, },


 {
  0x00, 0x00, 0x00, 0x00, 0x3C, 0x42, 0x42, 0x62, 0x5C, 0x20, 0x20, 0x10, 
  0x0E, 0x00, 0x00, 0x00, },


 {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, },


 {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 
  0x18, 0x04, 0x00, 0x00, },


 {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 
  0x1C, 0x08, 0x00, 0x00, }
};


void print_char(char ch,int r,int c,int color,std::vector<std::vector<int> > &img)
{
	if(r + 16 >= int(img.size()))
		return;
	if(c + 8 >= int(img[0].size()))
		return;
	int id = -1;
	if('0'<= ch && ch<='9')
		id = ch - '0';
	else {
		switch(ch) {
		case '-': id=10; break;
		case ',': id=11; break;
		case '.': id=12; break;
		}
	}
	if(id==-1)
		return;
	assert(0<=id && id<13);
	unsigned int *digit = font_digits[id];
	for(int dr=0;dr<16;dr++) {
		for(int dc=0;dc<8;dc++) {
			assert(0<= dr && dr < 16);
			if(digit[dr] & (1<<dc))
				img[r+dr][c+dc]=color;
		}
	}

}
void print_str(char const *msg,int r,int c,int color,std::vector<std::vector<int> > &img)
{
	while(*msg!=0) {
		print_char(*msg,r,c,color,img);
		msg++;
		c+=8;
	}
}
