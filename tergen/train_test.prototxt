layer {
  name: "data"
  type: "Data"
  top: "data"
  data_param {
    source: "db"
    batch_size: 32
    backend: LMDB
  }
}

layer {
  name: "slice"
  type: "Slice"
  bottom: "data"
  top: "expected"
  top: "source"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "source"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 16
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "bn1"
  type: "BatchNorm"
  bottom: "conv1"
  top: "bn1"
  batch_norm_param { eps: 0.001 }
}

layer {
  name: "relu1"
  type: "ReLU"
  bottom: "bn1"
  top: "step1/in"
}

layer {
  name: "step1/conv1"
  type: "Convolution"
  bottom: "step1/in"
  top: "step1/conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "step1/bn1"
  type: "BatchNorm"
  bottom: "step1/conv1"
  top: "step1/bn1"
  batch_norm_param { eps: 0.001 }
}

layer {
  name: "step1/relu1"
  type: "ReLU"
  bottom: "step1/bn1"
  top: "step1/bn1"
}


layer {
  name: "step1/conv2"
  type: "Convolution"
  bottom: "step1/bn1"
  top: "step1/conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "step1/bn2"
  type: "BatchNorm"
  bottom: "step1/conv2"
  top: "step1/bn2"
  batch_norm_param { eps: 0.001 }
}

layer {
  name: "step1/relu2"
  type: "ReLU"
  bottom: "step1/bn2"
  top: "step1/bn2"
}

layer {
  name: "step1/elt"
  type: "Eltwise"
  bottom: "step1/bn2"
  bottom: "step1/in"
  top: "step2/in"
}


layer {
  name: "step2/conv1"
  type: "Convolution"
  bottom: "step2/in"
  top: "step2/conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "step2/bn1"
  type: "BatchNorm"
  bottom: "step2/conv1"
  top: "step2/bn1"
  batch_norm_param { eps: 0.001 }
}

layer {
  name: "step2/relu1"
  type: "ReLU"
  bottom: "step2/bn1"
  top: "step2/bn1"
}


layer {
  name: "step2/conv2"
  type: "Convolution"
  bottom: "step2/bn1"
  top: "step2/conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "step2/bn2"
  type: "BatchNorm"
  bottom: "step2/conv2"
  top: "step2/bn2"
  batch_norm_param { eps: 0.001 }
}

layer {
  name: "step2/relu2"
  type: "ReLU"
  bottom: "step2/bn2"
  top: "step2/bn2"
}

layer {
  name: "step2/elt"
  type: "Eltwise"
  bottom: "step2/bn2"
  bottom: "step2/in"
  top: "step3/in"
}

layer {
  name: "step3/conv1"
  type: "Convolution"
  bottom: "step2/in"
  top: "step3/conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "step3/bn1"
  type: "BatchNorm"
  bottom: "step3/conv1"
  top: "step3/bn1"
  batch_norm_param { eps: 0.001 }
}

layer {
  name: "step3/relu1"
  type: "ReLU"
  bottom: "step3/bn1"
  top: "step3/bn1"
}


layer {
  name: "step3/conv2"
  type: "Convolution"
  bottom: "step3/bn1"
  top: "step3/conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "step3/bn2"
  type: "BatchNorm"
  bottom: "step3/conv2"
  top: "step3/bn2"
  batch_norm_param { eps: 0.001 }
}

layer {
  name: "step3/relu2"
  type: "ReLU"
  bottom: "step3/bn2"
  top: "step3/bn2"
}

layer {
  name: "step3/elt"
  type: "Eltwise"
  bottom: "step3/bn2"
  bottom: "step3/in"
  top: "step4/in"
}




layer {
  name: "topconv"
  type: "Convolution"
  bottom: "step4/in"
  top: "topconv"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 1
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "loss"
  type: "EuclideanLoss"
  bottom: "expected"
  bottom: "topconv"
  top: "loss"
}
